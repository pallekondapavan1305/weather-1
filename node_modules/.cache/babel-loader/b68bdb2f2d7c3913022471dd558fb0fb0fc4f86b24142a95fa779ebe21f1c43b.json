{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palle\\\\weather\\\\src\\\\component\\\\search\\\\search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_URL, options } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const loadOptions = async inputValue => {\n    try {\n      const response = await fetch(`${GEO_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, options);\n      const responseData = await response.json();\n      console.log(responseData);\n      return {\n        options: responseData.data.map(city => {\n          return {\n            value: `${city.longitude} ${city.latitude}`,\n            label: `${city.name}`\n          };\n        })\n      }; // Return an empty array of options in case of an error\n    } catch (err) {\n      console.error(\"Error loading options:\", err);\n      return {\n        options: []\n      }; // Return an empty array of options in case of an error\n    }\n  };\n  const handleOnchange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"seach for the city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnchange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_URL","options","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","loadOptions","inputValue","response","fetch","responseData","json","console","log","data","map","city","value","longitude","latitude","label","name","err","error","handleOnchange","searchData","placeholder","debounceTimeout","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/palle/weather/src/component/search/search.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { GEO_URL, options } from \"../../api\";\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${GEO_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`,\r\n        options\r\n      );\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      return {\r\n        options: responseData.data.map((city) => {\r\n          return {\r\n            value: `${city.longitude} ${city.latitude}`,\r\n            label: `${city.name}`,\r\n          };\r\n        }),\r\n      }; // Return an empty array of options in case of an error\r\n    } catch (err) {\r\n      console.error(\"Error loading options:\", err);\r\n      return { options: [] }; // Return an empty array of options in case of an error\r\n    }\r\n  };\r\n\r\n  const handleOnchange = (searchData) => {\r\n    setSearch(searchData);\r\n    onSearchChange(searchData);\r\n  };\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"seach for the city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnchange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,OAAO,EAAEC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,WAAW,GAAG,MAAOC,UAAU,IAAK;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEZ,OAAQ,4CAA2CU,UAAW,EAAC,EAClET,OACF,CAAC;MACD,MAAMY,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;MACzB,OAAO;QACLZ,OAAO,EAAEY,YAAY,CAACI,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;UACvC,OAAO;YACLC,KAAK,EAAG,GAAED,IAAI,CAACE,SAAU,IAAGF,IAAI,CAACG,QAAS,EAAC;YAC3CC,KAAK,EAAG,GAAEJ,IAAI,CAACK,IAAK;UACtB,CAAC;QACH,CAAC;MACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZV,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;MAC5C,OAAO;QAAExB,OAAO,EAAE;MAAG,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAM0B,cAAc,GAAIC,UAAU,IAAK;IACrCpB,SAAS,CAACoB,UAAU,CAAC;IACrBvB,cAAc,CAACuB,UAAU,CAAC;EAC5B,CAAC;EACD,oBACEzB,OAAA,CAACJ,aAAa;IACZ8B,WAAW,EAAC,oBAAoB;IAChCC,eAAe,EAAE,GAAI;IACrBV,KAAK,EAAEb,MAAO;IACdwB,QAAQ,EAAEJ,cAAe;IACzBlB,WAAW,EAAEA;EAAY;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN,CAAC;AAAC7B,EAAA,CAtCIF,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}