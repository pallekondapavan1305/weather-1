{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palle\\\\weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Search from \"./component/search/search\";\nimport CurrentWeather from \"./component/current_weather/current_weather\";\nimport { WEATHER_API_KEY, WEATHER_API_URL } from \"./api\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setcurrentWeather] = useState(null);\n  const [forecast, setforecast] = useState(null);\n  const onhandleOnSearchChanage = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const CurrentWeatherFeth = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([CurrentWeatherFeth, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setcurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setforecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather, forecast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: onhandleOnSearchChanage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"58WzTWAsl997IbRHklDmmb/s5r8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_KEY","WEATHER_API_URL","useState","jsxDEV","_jsxDEV","App","_s","currentWeather","setcurrentWeather","forecast","setforecast","onhandleOnSearchChanage","searchData","lat","lon","value","split","CurrentWeatherFeth","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","log","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["C:/Users/palle/weather/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Search from \"./component/search/search\";\nimport CurrentWeather from \"./component/current_weather/current_weather\";\nimport { WEATHER_API_KEY, WEATHER_API_URL } from \"./api\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [currentWeather, setcurrentWeather] = useState(null);\n  const [forecast, setforecast] = useState(null);\n\n  const onhandleOnSearchChanage = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const CurrentWeatherFeth = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n    const forecastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([CurrentWeatherFeth, forecastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setcurrentWeather({ city: searchData.label, ...weatherResponse });\n        setforecast({ city: searchData.label, ...forecastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n  console.log(currentWeather, forecast);\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={onhandleOnSearchChanage} />\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,cAAc,MAAM,6CAA6C;AACxE,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,uBAAuB,GAAIC,UAAU,IAAK;IAC9C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9C,MAAMC,kBAAkB,GAAGC,KAAK,CAC7B,GAAEjB,eAAgB,gBAAeY,GAAI,QAAOC,GAAI,UAASd,eAAgB,eAC5E,CAAC;IACD,MAAMmB,aAAa,GAAGD,KAAK,CACxB,GAAEjB,eAAgB,iBAAgBY,GAAI,QAAOC,GAAI,UAASd,eAAgB,eAC7E,CAAC;IAEDoB,OAAO,CAACC,GAAG,CAAC,CAACJ,kBAAkB,EAAEE,aAAa,CAAC,CAAC,CAC7CG,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAEjDjB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEd,WAAW,CAAC;QAAEiB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGF;MAAiB,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EACDC,OAAO,CAACC,GAAG,CAACzB,cAAc,EAAEE,QAAQ,CAAC;EACrC,oBACEL,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9B,OAAA,CAACN,MAAM;MAACqC,cAAc,EAAExB;IAAwB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDhC,cAAc,iBAAIH,OAAA,CAACL,cAAc;MAACyC,IAAI,EAAEjC;IAAe;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACjC,EAAA,CA/BQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}