{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palle\\\\weather\\\\src\\\\component\\\\search\\\\search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_URL, geo_url_options } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const loadOptions = async inputValue => {\n    try {\n      const response = await fetch(`${GEO_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geo_url_options);\n      const result = await response.text();\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleOnchange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"seach for the city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnchange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_URL","geo_url_options","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","loadOptions","inputValue","response","fetch","result","text","console","log","error","handleOnchange","searchData","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/palle/weather/src/component/search/search.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { GEO_URL, geo_url_options } from \"../../api\";\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n        const response = await fetch(\r\n            `${GEO_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`,\r\n            geo_url_options);\r\n        const result = await response.text();\r\n        console.log(result);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleOnchange = (searchData) => {\r\n    setSearch(searchData);\r\n    onSearchChange(searchData);\r\n  };\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"seach for the city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnchange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,OAAO,EAAEC,eAAe,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,WAAW,GAAG,MAAOC,UAAU,IAAK;IACxC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEZ,OAAQ,4CAA2CU,UAAW,EAAC,EAClET,eAAe,CAAC;MACpB,MAAMY,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,UAAU,IAAK;IACrCX,SAAS,CAACW,UAAU,CAAC;IACrBd,cAAc,CAACc,UAAU,CAAC;EAC5B,CAAC;EACD,oBACEhB,OAAA,CAACJ,aAAa;IACZqB,WAAW,EAAC,oBAAoB;IAChCC,eAAe,EAAE,GAAI;IACrBC,KAAK,EAAEf,MAAO;IACdgB,QAAQ,EAAEL,cAAe;IACzBT,WAAW,EAAEA;EAAY;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN,CAAC;AAACrB,EAAA,CA5BIF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}